# This workflow will publish RC releases to maven central and create the tag on git

name: Java CD for RC with Maven

on:
  workflow_dispatch:

jobs:
  tag-rc-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-passphrase: GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Check if branch is release branch
        id: is_release_branch
        run: |
          echo "Checking if branch is a release branch"
          if [[ "${{ github.ref }}" =~ ^refs/heads/release/.*$ ]]; then
            echo "This is a release branch"
            echo "is_release_branch=true" >> $GITHUB_ENV
          else
            echo "This is not a release branch"
            echo "is_release_branch=false" >> $GITHUB_ENV
          fi

      - name: Set up Git
        if: env.is_release_branch == 'true'
        run: |
          echo "Setting up Git"
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          git tag
          git describe
      - name: Get latest RC tag
        if: env.is_release_branch == 'true'
        id: latest_rc_tag
        run: |
          echo "Getting the latest RC tag"
          current_release_version=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/release\///')
          echo "current_release_version=${current_release_version}"
          git describe --tags --match "${current_release_version}-RC*" --abbrev=0 2>/dev/null
          latest_rc_tag=$(git describe --tags --match "${current_release_version}-RC*" --abbrev=0 2>/dev/null || echo "")
          echo "latest_rc_tag=${latest_rc_tag}"
          if [ -z "$latest_rc_tag" ]; then
            echo "No existing RC tags found"
            echo "next_rc_tag=${current_release_version}-RC1" >> $GITHUB_ENV
          else
            latest_rc_number=$(echo "$latest_rc_tag" | grep -o '[0-9]*$')
            next_rc_number=$((latest_rc_number + 1))
            echo "next_rc_tag=${current_release_version}-RC$next_rc_number" >> $GITHUB_ENV
          fi

      - name: Deploy to Maven Central
        if: env.is_release_branch == 'true' && env.next_rc_tag != ''
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          echo "Deploying artifact with RC tag: ${{ env.next_rc_tag }}"
          mvn --batch-mode -DskipTests -Denv=cd-maven -Drevision=${{ env.next_rc_tag }} clean deploy

      - name: Create new RC tag
        if: env.is_release_branch == 'true' && env.next_rc_tag != ''
        run: |
          echo "Creating new RC tag: ${{ env.next_rc_tag }}"
          git tag ${{ env.next_rc_tag }}

      - name: Push RC tag to GitHub
        if: env.is_release_branch == 'true' && env.next_rc_tag != ''
        run: |
          echo "Pushing RC tag to GitHub: ${{ env.next_rc_tag }}"
          git push origin ${{ env.next_rc_tag }}
